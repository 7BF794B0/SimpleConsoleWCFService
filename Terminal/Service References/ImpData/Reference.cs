//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Terminal.ImpData {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ImpData.IData")]
    public interface IData {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/SendData", ReplyAction="http://tempuri.org/IData/SendDataResponse")]
        string SendData(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IData/SendData", ReplyAction="http://tempuri.org/IData/SendDataResponse")]
        System.Threading.Tasks.Task<string> SendDataAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IDataChannel : Terminal.ImpData.IData, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class DataClient : System.ServiceModel.ClientBase<Terminal.ImpData.IData>, Terminal.ImpData.IData {
        
        public DataClient() {
        }
        
        public DataClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public DataClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public DataClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string SendData(int id) {
            return base.Channel.SendData(id);
        }
        
        public System.Threading.Tasks.Task<string> SendDataAsync(int id) {
            return base.Channel.SendDataAsync(id);
        }
    }
}
